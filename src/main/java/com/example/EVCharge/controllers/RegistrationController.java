package com.example.EVCharge.controllers;

import com.example.EVCharge.dto.RegistrationRequest;
import com.example.EVCharge.service.UserService;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.*;

import java.util.Map;

@RestController
@RequestMapping("/api/auth")
public class RegistrationController {

    @Autowired
    private UserService userService;

    @PostMapping("/register")
    public ResponseEntity<?> registerUser(@Valid @RequestBody RegistrationRequest request, BindingResult result) {
        // üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–∞–ª—ñ–¥–∞—Ü—ñ—ó DTO
        if (result.hasErrors()) {
            String errorMessage = result.getAllErrors().get(0).getDefaultMessage();
            return ResponseEntity.badRequest().body(Map.of("message", errorMessage));
        }

        // üëâ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑ —Å–µ—Ä–≤—ñ—Å—É (—á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —ñ—Å–Ω—É—î, —á–∏ –ø–∞—Ä–æ–ª—ñ –æ–¥–Ω–∞–∫–æ–≤—ñ)
        String message = userService.registerUser(request);

        if (!message.equals("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –ø—Ä–æ–π—à–ª–∞ —É—Å–ø—ñ—à–Ω–æ!")) {
            return ResponseEntity.badRequest().body(Map.of("message", message));
        }

        return ResponseEntity.ok(Map.of(
                "message", message,
                "redirectUrl", "/authorization.html"
        ));
    }
}
